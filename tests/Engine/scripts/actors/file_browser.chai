class file_browser{
    attr elements
    attr widget

    def file_browser(origin, size, on_file_choosen){
        this.widget := stage.create_group()
        this.elements := Map()
        this.widget.construct(fun[this, origin, size, on_file_choosen](){this.init(origin, size, on_file_choosen)},
        fun(){}, fun(delta){})
    }

    def init(origin, size, on_file_choosen){
        this.widget.set_origin(origin)
        this.widget.set_size(size)

        var create_button = eval_file("scripts/actors/button.chai")
        var button_size := vec3(60.0f, 60.0f, 0.0f)

        var cancel_origin := vec3(0.0f, 0.0f, 0.0f)
        var load_origin   := vec3(0.0f, 20.0f, 0.0f)

        this.elements["panel"] := eval_file("scripts/actors/panel.chai")(origin, size)

        this.elements["load_button"] := create_button("load_button",
                                                     "Load",
                                                     load_origin,
                                                     button_size,
                                                     on_file_choosen)

        this.elements["cancel_button"] := create_button("cancel_button",
                                                       "Cancel",
                                                       cancel_origin,
                                                       button_size,
                                                       fun(){})
        var cwd := core.filesystem.get_cwd()

        print(cwd)

        var content = core.filesystem.get_folder_content(cwd)

        var offset = 25.0f

/*        for(auto i = 0; i<content.size(); ++i){
            var actor := stage.create_actor()

            var t_origin := vec3(0.0f, file_panel_size.y - offset, 0.0f)
            actor.set_origin(t_origin)
            actor.add_text("label_" + to_string(i),
                           content[i],
                           t_origin ,
                           vec3(0.0f, 0.0f, 0.0f),
                           18,
                           core.filesystem.get_file_path("ui_font.ttf"))

            file_browser.add_actor("text_" + to_string(i), actor)

            print(content[i])

            offset += 25.0f
        }*/

        this.widget.add_actor("panel", this.elements["panel"].get())
        this.widget.add_actor("load_button", this.elements["load_button"].get())
        this.widget.add_actor("cancel_button", this.elements["cancel_button"].get())

    }

    def get(){
        return this.widget
    }
};

return fun(origin, size, on_file_choosen){
    return file_browser(origin, size, on_file_choosen)
}