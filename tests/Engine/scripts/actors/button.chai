class button{
    attr actors
    attr widget

    attr on_trigger
    attr mouse_down

    def button(origin, size, text, on_trigger){
        this.widget := stage.create_group()
        this.actors := Map()

        this.widget.set_origin(origin)
        this.widget.set_size(size)

        var create_control = eval_file("scripts/actors/control.chai")
        var create_label   = eval_file("scripts/actors/label.chai")

        this.actors["button"] := create_control(origin, size, "button", "button.json")
        this.actors["label"] := create_label(origin, text)

        this.on_trigger := on_trigger
        this.mouse_down = false

        print("on before construct")
        this.widget.construct(fun(){}, fun(){}, fun[this](delta){ this.logic(delta) })

        for_each(this.actors, fun[this](i) { this.widget.add_actor(i.first, i.second.get()) })

    }

    def set_text(new_text){
        this.actors["label"].set_text(new_text)
    }

    def logic(delta){
        var current_camera := stage.get_scene("current").get_camera("current")
        var world_coordinates := current_camera.convert_screen_to_world(core.input.get_mouse_coordinates())

        var mouse_x = world_coordinates.x
        var mouse_y = world_coordinates.y

        var x = this.widget.get_origin().x
        var y = this.widget.get_origin().y

        var w = this.widget.get_size().x
        var h = this.widget.get_size().y

        if(mouse_x >= x - w / 2.0f && mouse_x <= x + w / 2.0f && mouse_y >= y - h / 2.0f && mouse_y <= y + h / 2.0f){

            if(core.input.is_key_down("mouse_left")){

                if(!this.mouse_down){
                    this.actors["button"].get_model("button").change_animation("button_on")
                    this.mouse_down = true
                }

            } else {
                if(this.mouse_down){
                    this.actors["button"].get_model("button").change_animation("button_off")
                    this.mouse_down = false
                    on_trigger(this)()
                }
            }
        } else {
            this.mouse_down = false
            this.actors["button"].get_model("button").change_animation("button_off")
        }

    }

    def get(){
        return this.widget
    }

}

return fun(origin, size, text, on_trigger){
    return button(origin, size, text, on_trigger)
}